# Generated by Django 3.0 on 2019-12-08 12:20

import database.models
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('nazwisko', models.CharField(max_length=100)),
                ('telefon', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Badanie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Dokument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dokument', models.FileField(upload_to=database.models.user_dir_path)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Lekarz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('surname', models.CharField(blank=True, max_length=100)),
                ('specjalizacja', models.CharField(default='BRAK', max_length=100, null=True)),
                ('nr_pwz', models.CharField(max_length=100, null=True)),
                ('telefon', models.CharField(max_length=100, null=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Objawy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=250)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Pacjent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('surname', models.CharField(blank=True, max_length=100)),
                ('pesel', models.CharField(blank=True, max_length=100)),
                ('ulica', models.CharField(blank=True, max_length=100)),
                ('nr_ulicy', models.CharField(blank=True, max_length=20)),
                ('nr_mieszkania', models.CharField(blank=True, max_length=20)),
                ('kod_pocztowy', models.CharField(blank=True, max_length=10)),
                ('miasto', models.CharField(blank=True, max_length=100)),
                ('wojewodztwo', models.CharField(choices=[('BRAK', 'Brak'), ('DOLNOSLAKIE', 'Dolnośląskie'), ('KUJAWSKOPOMORSKIE', 'Kujawsko-pomorskie'), ('LUBELSKIE', 'Lubelskie'), ('LUBUSKIE', 'Lubuskie'), ('LODZKIE', 'Łódzkie'), ('MALOPOLSKIE', 'Małopolskie'), ('MAZOWIECKIE', 'Mazowieckie'), ('OPOLSKIE', 'Opolskie'), ('PODKARPACKIE', 'Podkarpackie'), ('PODLASKIE', 'Podlaskie'), ('POMORSKIE', 'Pomorskie'), ('SLASKIE', 'Śląskie'), ('SWIETOKRZYSKIE', 'Świętokrzyskie'), ('WARMINSKOMAZURSKIE', 'Warmińsko-mazurskie'), ('WIELKOPOLSKIE', 'Wielkopolskie'), ('ZACHODNIOPOMORSKIE', 'Zachodniopomorskie')], default='BRAK', max_length=30)),
                ('telefon', models.CharField(blank=True, max_length=100)),
                ('dokumenty', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Dokument')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Przychodnia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(blank=True, max_length=100)),
                ('ulica', models.CharField(blank=True, max_length=100)),
                ('nr_ulicy', models.CharField(blank=True, max_length=100)),
                ('nr_mieszkania', models.CharField(blank=True, max_length=100)),
                ('kod_pocztowy', models.CharField(blank=True, max_length=100)),
                ('miasto', models.CharField(blank=True, max_length=100)),
                ('wojewodztwo', models.CharField(choices=[('BRAK', 'Brak'), ('DOLNOSLAKIE', 'Dolnośląskie'), ('KUJAWSKOPOMORSKIE', 'Kujawsko-pomorskie'), ('LUBELSKIE', 'Lubelskie'), ('LUBUSKIE', 'Lubuskie'), ('LODZKIE', 'Łódzkie'), ('MALOPOLSKIE', 'Małopolskie'), ('MAZOWIECKIE', 'Mazowieckie'), ('OPOLSKIE', 'Opolskie'), ('PODKARPACKIE', 'Podkarpackie'), ('PODLASKIE', 'Podlaskie'), ('POMORSKIE', 'Pomorskie'), ('SLASKIE', 'Śląskie'), ('SWIETOKRZYSKIE', 'Świętokrzyskie'), ('WARMINSKOMAZURSKIE', 'Warmińsko-mazurskie'), ('WIELKOPOLSKIE', 'Wielkopolskie'), ('ZACHODNIOPOMORSKIE', 'Zachodniopomorskie')], default='BRAK', max_length=30)),
                ('email', models.CharField(blank=True, max_length=100)),
                ('telefon', models.CharField(blank=True, max_length=100)),
                ('lekarze', models.ManyToManyField(to='database.Lekarz')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Wizyta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_wizyty', models.DateTimeField()),
                ('uwagi', models.CharField(blank=True, max_length=500)),
                ('badania', models.ManyToManyField(blank=True, to='database.Badanie')),
                ('dokumenty', models.ManyToManyField(blank=True, to='database.Dokument')),
                ('fk_id_lekarz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Lekarz')),
                ('fk_id_pacjent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Pacjent')),
                ('fk_id_przychodnia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Przychodnia')),
                ('objawy', models.ManyToManyField(blank=True, to='database.Objawy')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='JednostkaChorobowa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(blank=True, max_length=200)),
                ('opis', models.CharField(blank=True, max_length=500)),
                ('nr_icd', models.CharField(blank=True, max_length=100)),
                ('objawy', models.ManyToManyField(to='database.Objawy')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='DaneStatystyczne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wojewodztwo', models.CharField(choices=[('BRAK', 'Brak'), ('DOLNOSLAKIE', 'Dolnośląskie'), ('KUJAWSKOPOMORSKIE', 'Kujawsko-pomorskie'), ('LUBELSKIE', 'Lubelskie'), ('LUBUSKIE', 'Lubuskie'), ('LODZKIE', 'Łódzkie'), ('MALOPOLSKIE', 'Małopolskie'), ('MAZOWIECKIE', 'Mazowieckie'), ('OPOLSKIE', 'Opolskie'), ('PODKARPACKIE', 'Podkarpackie'), ('PODLASKIE', 'Podlaskie'), ('POMORSKIE', 'Pomorskie'), ('SLASKIE', 'Śląskie'), ('SWIETOKRZYSKIE', 'Świętokrzyskie'), ('WARMINSKOMAZURSKIE', 'Warmińsko-mazurskie'), ('WIELKOPOLSKIE', 'Wielkopolskie'), ('ZACHODNIOPOMORSKIE', 'Zachodniopomorskie')], default='BRAK', max_length=100)),
                ('liczba_zachorowan', models.BigIntegerField()),
                ('choroba', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.JednostkaChorobowa')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('fk_id_admin', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.Administrator')),
                ('fk_id_lekarz', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.Lekarz')),
                ('fk_id_pacjent', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.Pacjent')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('id',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='wizyta',
            constraint=models.UniqueConstraint(fields=('data_wizyty', 'fk_id_lekarz', 'fk_id_pacjent'), name='Unikatowosc wizyty'),
        ),
    ]
